# name: test/sql/create_pg/all_properties.test
# description: Testing the creation of property graphs with all properties
# group: [duckpgq_sql_create_pg]

#statement ok
#pragma enable_verification

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);

statement ok
CREATE TABLE School(school_name VARCHAR, school_id BIGINT, school_kind BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (1,2, 14), (1,3, 15), (2,3, 16);

# all properties
statement ok
-CREATE PROPERTY GRAPH pg_all_properties
VERTEX TABLES (
    Student LABEL Person,
    School  LABEL School IN School_kind (Hogeschool, University)
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows
    );


# all properties
statement ok
-CREATE PROPERTY GRAPH pg_only_id
VERTEX TABLES (
    Student PROPERTIES (id) LABEL Person
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows
    );

query II
-FROM GRAPH_TABLE (pg_only_id MATCH (p:Person)-[k:Knows]->(p2:Person) COLUMNS (p.id as id, p2.id as friend_id));
----
0	1
0	2
0	3
1	2
1	3
2	3

statement error
-FROM GRAPH_TABLE (pg_only_id MATCH (p:Person)-[k:Knows]->(p2:Person) COLUMNS (p.id as id, p2.name as friend_name));
----
Binder Error: Property p2.name is never registered!


query III
-FROM GRAPH_TABLE (pg_only_id MATCH p = any shortest (p:Person)-[k:Knows]->*(p2:Person) COLUMNS (p.id as id, p2.id as friend_id, vertices(p)));
----
0	0	[0]
0	1	[0, 1]
0	2	[0, 2]
0	3	[0, 3]
1	1	[1]
1	2	[1, 2]
1	3	[1, 3]
2	2	[2]
2	3	[2, 3]
3	3	[3]