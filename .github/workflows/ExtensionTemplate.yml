#
# NOTE: this workflow is for testing the extension template itself,
#     this workflow will be removed when scripts/bootstrap-template.py is run
#
name: Extension Template
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux
    if: ${{ vars.RUN_RENAME_TEST == 'true' || github.repository == 'duckdb/extension-template' }}
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ 'v1.2.1' ]
    env:
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      VCPKG_TARGET_TRIPLET: 'x64-linux'
      GEN: ninja
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    defaults:
      run:
        shell: bash

    steps:
      - name: Install required ubuntu packages
        run: |
          apt-get update -y -qq
          apt-get install -y -qq software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt-get update -y -qq
          apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client

      - name: Install Git 2.18.5
        run: |
          wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
          tar xvf v2.18.5.tar.gz
          cd git-2.18.5
          make
          make prefix=/usr install
          git --version

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Checkout DuckDB to version
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}

      - uses: ./duckdb/.github/actions/ubuntu_18_setup

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.1
        with:
          vcpkgGitCommitId: 5e5d0e1cd7785623065e77eff011afdeec1a3574

      - name: Rename extension
        run: |
          python3 scripts/bootstrap-template.py ext_1_a_123b_b11

      - name: Build
        run: |
          make

      - name: Test
        run: |
          make test

  macos:
    name: MacOS
    if: ${{ vars.RUN_RENAME_TEST == 'true' || github.repository == 'duckdb/extension-template' }}
    runs-on: macos-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ 'v1.2.1']
    env:
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      VCPKG_TARGET_TRIPLET: 'x64-osx'
      OSX_BUILD_ARCH: 'x86_64'
      GEN: ninja
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install Ninja
        run: brew install ninja

      - uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Checkout DuckDB to version
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.1
        with:
          vcpkgGitCommitId: 5e5d0e1cd7785623065e77eff011afdeec1a3574

      - name: Rename extension
        run: |
          python scripts/bootstrap-template.py ext_1_a_123b_b11

      - name: Build
        run: |
          make

      - name: Test
        run: |
          make test

  windows:
    name: Windows
    if: ${{ vars.RUN_RENAME_TEST == 'true' || github.repository == 'duckdb/extension-template' }}
    runs-on: windows-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '1.2.1' ]
    env:
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      VCPKG_TARGET_TRIPLET: 'x64-windows-static-md'
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Checkout DuckDB to version
        # Add commits/tags to build against other DuckDB versions
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.1
        with:
          vcpkgGitCommitId: 5e5d0e1cd7785623065e77eff011afdeec1a3574

      - name: Rename extension
        run: |
          python scripts/bootstrap-template.py ext_1_a_123b_b11

      - name: Build
        run: |
          make

      - name: Test extension
        run: |
          build/release/test/Release/unittest.exe